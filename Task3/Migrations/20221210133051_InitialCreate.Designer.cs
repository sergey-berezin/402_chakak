// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task3.Models;

#nullable disable

namespace Task3.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221210133051_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("Task3.Models.Embedding", b =>
                {
                    b.Property<int>("EmbeddingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ImageId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PairImage1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PairImage2")
                        .HasColumnType("INTEGER");

                    b.Property<float>("distance")
                        .HasColumnType("REAL");

                    b.Property<float>("similarity")
                        .HasColumnType("REAL");

                    b.HasKey("EmbeddingId");

                    b.HasIndex("ImageId");

                    b.ToTable("Embeddings");
                });

            modelBuilder.Entity("Task3.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Hashcode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ImageId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Task3.Models.byteImage", b =>
                {
                    b.Property<int>("ImageId")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("BLOB")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("ImageId");

                    b.ToTable("bytes");
                });

            modelBuilder.Entity("Task3.Models.Embedding", b =>
                {
                    b.HasOne("Task3.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Task3.Models.byteImage", b =>
                {
                    b.HasOne("Task3.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");
                });
#pragma warning restore 612, 618
        }
    }
}
